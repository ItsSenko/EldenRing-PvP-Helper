<UserControl x:Class="PvPHelper.MVVM.Views.MiscView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PvPHelper.MVVM.Views"
             xmlns:userControls="clr-namespace:PvPHelper.MVVM.Views.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="658.285714285714" d:DesignWidth="1092.8">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <userControls:SeparatorTextControl Text="Settings" Grid.Row="0" FontSize="20"/>
        <Border Margin="25,25,25,25" Grid.Row="1">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type userControls:LabeledCircleToggle}">
                        <Setter Property="Margin" Value="20,0,20,0"/>
                    </Style>
                </StackPanel.Resources>

                <Button Style="{DynamicResource PrimaryButton}"
                        Content="Check for Updates"
                        Command="{Binding CheckForUpdates}" Cursor="Hand" Width="182" Height="53"/>
                <userControls:LabeledCircleToggle Label="Auto Update"
                                                  Checked="{Binding AutoUpdateToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  ToggleCommand="{Binding AutoUpdateToggle}"/>
                <userControls:LabeledCircleToggle Label="Allow Unsafe Options"
                                                  Checked="{Binding UnsafeToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  ToggleCommand="{Binding UnsafeToggle}"/>

            </StackPanel>
        </Border>
        <userControls:SeparatorTextControl Text="Miscellaneous" Grid.Row="2" FontSize="20"/>
        <Border Margin="25,0,25,0" Grid.Row="3">
            <Grid>
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type userControls:LabeledCircleToggle}">
                            <Setter Property="Margin" Value="10,10,0,20"/>
                        </Style>
                    </StackPanel.Resources>

                    <StackPanel Orientation="Vertical">
                        <userControls:LabeledCircleToggle Label="Show Hitboxes"
                                            Checked="{Binding ShowHitboxesToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            ToggleCommand="{Binding ShowHitboxesToggle}"/>

                        <userControls:LabeledCircleToggle Label="Free Cam"
                                            Checked="{Binding FreeCamToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            ToggleCommand="{Binding FreeCamToggle}"/>

                        <userControls:LabeledCircleToggle Label="Custom FPS"
                                            Checked="{Binding CustomFPSToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            ToggleCommand="{Binding CustomFPSToggle}"/>

                        <userControls:LabeledCircleToggle Label="Custom FOV"
                                            Checked="{Binding CustomFOVToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            ToggleCommand="{Binding CustomFOVToggle}"/>
                    </StackPanel>

                    <StackPanel Orientation="Vertical" Margin="10,0,0,0">
                        <userControls:LabeledCircleToggle Label="No Material Cost"
                                            Checked="{Binding NoMaterialCostToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            ToggleCommand="{Binding NoMaterialCostToggle}"/>
                        <userControls:LabeledCircleToggle Label="Fast Seamless Co-op Items"
                                            Checked="{Binding FastAnims.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            ToggleCommand="{Binding FastAnims}" Visibility="{Binding SeamlessEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Style="{DynamicResource PrimaryButton}"
                        Content="Unlock All Colosseums"
                        Command="{Binding AllArenas}" Cursor="Hand" Height="53"/>

                    </StackPanel>
                </StackPanel>


                <!--<Button Style="{DynamicResource PrimaryButton}"
                        Content="Unlock All Gestures"
                        Command="{Binding AllGestures}" Cursor="Hand" Height="53" Margin="268,139,585,86"/>-->

                <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Right">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type userControls:SimpleDropDown}">
                            <Setter Property="Margin" Value="0,10,30,0"/>
                        </Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Margin" Value="0,0,30,0"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Text="Open Menu"
                           Foreground="{DynamicResource LighterTextBrush}"
                           FontSize="24" Width="126"/>
                    <userControls:SimpleDropDown ItemsSource="{Binding MenuItemsSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             SelectedItem="{Binding SelectedMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="250"/>

                    <TextBlock
                           Foreground="{DynamicResource LighterTextBrush}"
                           FontSize="24" Width="200" TextAlignment="Center" Visibility="{Binding SeamlessEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        Invasion <LineBreak/>
                        Spawn Animation
                    </TextBlock>
                    <userControls:SimpleDropDown ItemsSource="{Binding AnimItemsSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 SelectedIndex="{Binding SelectedAnimIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 SelectedItem="{Binding SelectedAnim, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="250" Visibility="{Binding SeamlessEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Synced="True"/>
                </StackPanel>
                
            </Grid>
        </Border>
        <Grid Grid.Row="4">
            <TextBlock Grid.Row="2" Text="Thank you for using the helper!"
                   FontSize="30" Foreground="{DynamicResource LighterBrush}"
                   HorizontalAlignment="Center" Margin="0,10,0,113"/>

            <TextBlock Grid.Row="2" Text="Created by"
                   FontSize="30" Foreground="{DynamicResource LighterBrush}"
                   HorizontalAlignment="Center" Margin="0,63,0,61"/>

            <TextBlock Grid.Row="2" Text="Senko and CatShark"
                   FontSize="30" Foreground="{DynamicResource HighlightBrush}"
                   HorizontalAlignment="Center" Margin="0,110,0,10"/>
        </Grid>
    </Grid>
</UserControl>

<UserControl x:Class="PvPHelper.MVVM.Views.DashboardView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PvPHelper.MVVM.Views.UserControls"
             xmlns:viewModels="clr-namespace:PvPHelper.MVVM.ViewModels"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="658.285714285714" d:DesignWidth="1092.8">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition  Height="200"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Toggles" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <StackPanel x:Name="Stats" Grid.Column="0" Orientation="Vertical" VerticalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Margin" Value="0,10,0,10"/>
                    </Style>
                </StackPanel.Resources>
                <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                    <ToggleButton Style="{StaticResource CircleToggle}"
                                  IsChecked="{Binding NoDamageToggle.State,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Command="{Binding NoDamageToggle}"/>
                    <!--<local:StatDisplay Margin="10 0 10 0" Width="100" Height="50" UriSource="Resources/Images/water.svg" Fill="#7BADF6"/>-->
                    <local:StatDisplay Margin="10 0 10 0"  
                                       Width="100" Height="40" 
                                       UriSource="Resources/Images/hospital.svg" 
                                       Fill="#D36969"
                                       Text="{Binding HPText, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:Refresh Height="30" BtnCommand="{Binding RefillHPCommand}"/>
                    <!--<svgc:SvgIcon Height="30" Fill="{DynamicResource ForegroundBrush}" UriSource="Resources/Images/refresh.svg"/>-->
                </StackPanel>
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <ToggleButton Style="{StaticResource CircleToggle}"
                                  IsChecked="{Binding NoFPLossToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Command="{Binding NoFPLossToggle}"/>
                    <local:StatDisplay Margin="10 0 10 0" 
                                       Width="100" 
                                       Height="40" 
                                       UriSource="Resources/Images/water.svg" 
                                       Fill="#7BADF6"
                                       Text="{Binding FPText, UpdateSourceTrigger=PropertyChanged}"/>

                    <local:Refresh Height="30" BtnCommand="{Binding RefillFPCommand}"/>
                </StackPanel>
                <!--<Grid Grid.Row="0" Height="50">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <local:CircleToggle Grid.Column="0" Grid.ColumnSpan="2"/>
                                    <local:StatDisplay Grid.Column="2" Grid.ColumnSpan="2" UriSource="Resources/Images/water.svg" Fill="#7BADF6"/>
                                    <svgc:SvgIcon Grid.Column="4" Margin="10" Fill="{DynamicResource ForegroundBrush}" UriSource="Resources/Images/refresh.svg"/>
                                </Grid>
                                <Grid Grid.Row="1" Height="50">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <local:CircleToggle Grid.Column="0" Grid.ColumnSpan="2"/>
                                    <local:StatDisplay Grid.Column="2" Grid.ColumnSpan="2" UriSource="Resources/Images/hospital.svg" Fill="#D36969"/>
                                    <svgc:SvgIcon Grid.Column="4" Margin="10" Fill="{DynamicResource ForegroundBrush}" UriSource="Resources/Images/refresh.svg"/>
                                </Grid>-->
            </StackPanel>
            <StackPanel x:Name="First" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type local:LabeledCircleToggle}">
                        <Setter Property="Margin" Value="0,10,0,10"/>
                    </Style>
                </StackPanel.Resources>
                <local:LabeledCircleToggle Label="Auto Revive"
                                           Checked="{Binding AutoReviveToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           ToggleCommand="{Binding AutoReviveToggle}"/>
                <local:LabeledCircleToggle Label="Mad Heal"
                                           Checked="{Binding MadHealToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           ToggleCommand="{Binding MadHealToggle}"/>
            </StackPanel>
            <StackPanel x:Name="Second" Grid.Column="2" Orientation="Vertical" VerticalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type local:LabeledCircleToggle}">
                        <Setter Property="Margin" Value="0,10,0,10"/>
                    </Style>
                </StackPanel.Resources>
                <local:LabeledCircleToggle Label="Infinite&#x0a;Consumables"
                                           Checked="{Binding InfConsumeablesToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           ToggleCommand="{Binding InfConsumeablesToggle}"/>
                <local:LabeledCircleToggle Label="Fast Anims"
                                           Checked="{Binding FastAnimsToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           ToggleCommand="{Binding FastAnimsToggle}"/>
            </StackPanel>
            <StackPanel x:Name="Third" Grid.Column="3" Orientation="Vertical" VerticalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type local:LabeledCircleToggle}">
                        <Setter Property="Margin" Value="0,10,0,10"/>
                    </Style>
                </StackPanel.Resources>
                <local:LabeledCircleToggle Label="No Death"
                                           Checked="{Binding NoDeathToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           ToggleCommand="{Binding NoDeathToggle}"/>
                <local:LabeledCircleToggle Label="No Stam Loss"
                                           Checked="{Binding NoStamLossToggle.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           ToggleCommand="{Binding NoStamLossToggle}"/>
            </StackPanel>
        </Grid>
        <Grid x:Name="Bottom" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <local:Console Grid.Column="0" Margin="10"/>
            
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border Margin="10" Background="{StaticResource BackgroundBrush}" Grid.Row="0">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="Phantom ID" Margin="0 20 0 0" FontSize="16" HorizontalAlignment="Center" Foreground="{StaticResource ForegroundBrush}"/>
                        <local:SimpleDropDown Grid.Row="1" 
                                              Height="30" 
                                              Margin="20 10 20 0"
                                              Width="150"
                                              SelectedIndex="{Binding PhantomIDSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              ItemsSource="{Binding PhantomIDItemsSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Button Margin="20,64,20,-59" 
                                Grid.Row="1"
                                Content="Change Color"
                                Style="{DynamicResource PrimaryButton}"
                                Command="{Binding ChangeColor}" Cursor="Hand"/>
                        <local:LabeledCircleToggle Margin="20,104,20,-111" Grid.Row="1"
                                                   Label="Update"
                                                   Checked="{Binding UpdatePhantom.State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   ToggleCommand="{Binding UpdatePhantom}"/>
                        <!--<Button Margin="20,104,20,-99" 
                                Grid.Row="1"
                                Content="Reset Color"
                                Style="{DynamicResource PrimaryButton}"
                                Command="{Binding ResetColor}" Cursor="Hand"/>-->
                    </Grid>
                </Border>
                <Grid Margin="10" Background="{StaticResource BackgroundBrush}" Grid.Row="1">
                    <Button Height="150" Margin="0,0,0,35" Grid.Row="0" Command="{Binding AttachCommand}" Style="{DynamicResource SimpleButtonStyle}" Cursor="Hand">
                            <svgc:SvgIcon 
                                  Fill="{DynamicResource ForegroundBrush}" 
                                  UriSource="{Binding AttachIcon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                />
                        </Button>
                    <TextBlock Grid.Row="1" Text="{Binding AttachText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                FontSize="30"
                                Foreground="{DynamicResource ForegroundBrush}" Margin="0,153,0,0"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
